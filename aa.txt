지금 이 시대를 정의하는 단어는 인터넷 시대라고 생각합니다.
수많은 웹사이트들이 만들어지고 있으며, 우리 생활의 전반을 인터넷이 지배하고 있습니다.
이 많은 웹사이트들이 만들어지는 서버측 프레임워크는 자바의 스프링 프레임워크가 
절대 다수를 차지하고 있습니다.
특히나 큰 규모의 웹사이트에서는 더욱 그러합니다.
그런데, 스프링 프레임 워크를 설명하는 책이 5권짜리로 나온 것을 보았습니다.
한 권이 약 700~800페이지 짜리 입니다.
그 정도로 복잡합니다.
저는 단순하고 쉽게 웹사이트를 만들 수 있는 서버측 프레임워크를 개발하였습니다.
라이브러리는 사용되어야 할 것이지, 배워야 할 것이 아니다라는 모토를 실현했습니다.
서버측 프로그래밍을 하기 위해 기본적인 C++지식 이외에 따로 배워야 할 것이 한 페이지 남짓합니다.
HTML이나 자바스크립트를 있는 그대로 템플릿으로 사용할 수 있습니다.
그리고, 웹사이트 개발에서 쿠키를 복잡하게 사용할 필요없이 그냥 변수를 활용하여 
여러 페이지에 걸친 웹사이트도 원하는대로 독립적으로 혹은 연계적으로 짤 수가 있습니다.
서버측 웹프로그래밍이 클래스를 정의하는 것으로 바뀌었기 때문에, 
좀 더 쉽게 소프트웨어공학적인 프로그래밍을 가능하게 합니다.
자신의 서버를 하나의 실행 파일로 만들어 내기 때문에, 
라우터라든가 소형의 인터넷 서버로서 기능해야 하는 기기 등에서 이용될 수가 있을 것으로 생각됩니다.

한 가지 더 아이템이 있습니다. 
이것은 토론과 민주적인 의사결정이라는 인터넷 서비스입니다.
일례로 대학가의 학생회장 선거만 보더라도, 투표율은 거의 50%를 넘지 못합니다.
선거운동을 위해 현수막이라든가 팸플렛을 만들어 돌리기도 합니다만,
나온 사람 얼굴만 보고 찍는 경우가 태반입니다.
엄청난 시간 낭비, 돈 낭비입니다.
그런데, 이런 선거야 말로 컴퓨터 시스템이 큰 도움을 줄 수 있는 분야라고 생각합니다.
컴퓨터는 일견 피상적인 의견 교환만이 가능한 것 같지만,
이는 게시판 시스템의 문제이지, 컴퓨터 자체의 문제는 아니라고 생각합니다.
저는 새로운 형식의 게시판을 통해 진중하고, 장기간에 걸친 토론과 
그 결과에 대해 구성원들의 의견을 묻는 결론 도출의 과정을 고안해 내었습니다.
컴퓨터 선거 방식의 가장 큰 우려인 선거 결과의 해킹에 대한 근원적인 해결책도 가지고 있습니다.
물론 이 시스템은 선거만이 아니라, 토론 전반에 걸쳐 사용될 수 있습니다.

위의 두 가지는 이미 제가 프로토타입을 가지고 있어서, 
실제 사업화에 긴 시간이 필요하지는 않을 것으로 보입니다.

